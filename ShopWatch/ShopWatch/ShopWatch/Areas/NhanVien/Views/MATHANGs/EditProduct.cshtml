@model ShopWatch.Models.MATHANG


@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Areas/NhanVien/Views/Shared/_Layout1.cshtml";
}


<h3 style="margin:2%" class="nameThem">Cập nhật sản phẩm </h3>
@using (Html.BeginForm("EditProduct", "MATHANGs", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

<div class="row g-3">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.MAMATHANG, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.MAMATHANG, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TENHANG, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TENHANG, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.TENHANG, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TENHANG, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NGAYSANXUAT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.NGAYSANXUAT, new { type = "date", @class = "form-control", @Value = Model.NGAYSANXUAT?.ToString("yyyy-MM-dd") })
            @Html.ValidationMessageFor(model => model.NGAYSANXUAT, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TENHANGSANXUAT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*   @Html.DropDownListFor(model => model.TENHANGSANXUAT, ViewBag.WatchBrands as List<SelectListItem>, "Chọn thương hiệu", new { @class = "form-control" })*@
            @Html.DropDownListFor(model => model.TENHANGSANXUAT, new SelectList(
               new List<SelectListItem>
               {
            new SelectListItem { Value = "TAG Heuer", Text = "TAG Heuer" },
            new SelectListItem { Value = "A.Lange & Söhne", Text = "A.Lange & Söhne" },
            new SelectListItem { Value = "Jaeger-LeCoultre", Text = "Jaeger-LeCoultre" },
            new SelectListItem { Value = "Rolex", Text = "Rolex" },
            new SelectListItem { Value = "Hublot", Text = "Hublot" }
               }, "Value", "Text"), "Chọn thương hiệu",
               new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TENHANGSANXUAT, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BAOHANH, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.BAOHANH, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BAOHANH, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GIAHANG, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GIAHANG, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GIAHANG, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LOAI, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.LOAI, new SelectList(
                new List<SelectListItem>
                {
                    new SelectListItem { Value = "DongHoCo", Text = "Đồng hồ cơ" },
                    new SelectListItem { Value = "DongHoDienTu", Text = "Đồng hồ điện tử" },
                    new SelectListItem { Value = "DongHoThongMinh", Text = "Đồng hồ thông minh" },
                    new SelectListItem { Value = "DongHoThoiTrangCaoCap", Text = "Đồng hồ thời trang cao cấp" },
                }, "Value", "Text"),
                new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LOAI, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.KICHTHUOC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.KICHTHUOC, new { htmlAttributes = new { type = "number", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.KICHTHUOC, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ANHSANPHAM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ANHSANPHAM, new { htmlAttributes = new { type = "file", @class = "form-control", name = "imageFile", id = "imageFile", onchange = "previewImage(event)" } })
            @Html.ValidationMessageFor(model => model.ANHSANPHAM, "", new { @class = "text-danger" })
            <img id="previewImage" src="@Model.ANHSANPHAM" class="previewImage" style="width: 200px; height: 200px" />
        </div>
    </div>

    <script>
        function previewImage(event) {
            var input = event.target;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('previewImage').src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>

}
@if (TempData["SuccessMessage"] != null)
{
    <script>
        alert('@TempData["SuccessMessage"]');
    </script>
}






















@*@model ShopWatch.Models.MATHANG

    @{
        ViewBag.Title = "Edit";
        Layout = "~/Areas/NhanVien/Views/Shared/_Layout1.cshtml";
    }

    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>MATHANG</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MAMATHANG)

            <div class="form-group">
                @Html.LabelFor(model => model.TENHANG, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TENHANG, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TENHANG, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ANHSANPHAM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ANHSANPHAM, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ANHSANPHAM, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NGAYSANXUAT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NGAYSANXUAT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NGAYSANXUAT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TENHANGSANXUAT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TENHANGSANXUAT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TENHANGSANXUAT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GIAHANG, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GIAHANG, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GIAHANG, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LOAI, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LOAI, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LOAI, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BAOHANH, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BAOHANH, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BAOHANH, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.KICHTHUOC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.KICHTHUOC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KICHTHUOC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
*@